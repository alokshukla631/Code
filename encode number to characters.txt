I want you to write a program which will encode a number for me. The program should accept the number as a command line argument and use the following encoding scheme to encode it.

1-> a
2-> b
3-> c
4 -> d
e
f
g
h
i
j
k

....
.....

26-> z

For example 

./prog 1234

should print the following

abcd
lcd
awd




Answer:
// read the argument using argc and argv. If the number of arguments > 2 || arguments < 2, then print error
// keep it in string format only
// read each charater one by one and putchar(c). If any char is 0 then exit from this loop
// read a pair of character 0,1 / 2,3 etc and convert. If last character left is single then also convert (handling)

void printToScreen(char c)
{
    c = c + ('a' - '1');
    putchar(c);
    return;
}

void printToScreen1(char c1, char c2)
{
    char c = '0';
    if(c2 == '\0')
        return;
    if(c1 == '1')
    {
        c = c + ('j' - c2);
    }
    else if(c1 == '2')
    {
        c = c + ('t' - c2);
    }
    
    putchar(c);
    return;
    
}


void recursePrint(char *str, int start, int end)
{
    for(i=start; i<=end; i++)
    {
        printToScreen(str[i]);         
        recursePrint(str, i+1, len-1);
        
        printToScreen1(str[i], str[i+1]);
        recursePrint(str, i+2, len-1);
    }
}

int main(int argc, char *argv[])
{
    if(argc != 2)
    {
        printf("usage type ./prog 1234");
        return 0;
    }
    recursePrint(argv[1], 0, strlen(argv[1])-1);
    
    
    
    
    return 0;
    
    
}


